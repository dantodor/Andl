@section scripts {
    @Scripts.Render("~/bundles/emprest")
}

@{
    ViewBag.Title = "Index";
}

<h2>CRUD Operations on HTML Table using HTML Templates</h2>

<p>
    This is an <strong>Andl</strong> REST sample.
    It is based on the sample found <a href="http://www.dotnetcurry.com/aspnet/1006/edit-html-table-crud-knockoutjs-aspnet-webapi">here</a>. The changes required are minimal.
</p>
<p>
   The aim is to show that <strong>Andl</strong> is compatible with common techniques used in coding single page REST applications.
</p>
<p>
    Andl provides all database services.
    There is no application code other than Andl, plus HTML, JavaScript and a bit of Web Server configuration.
</p>

<style type="text/css">
    table {
        width: 700px;
        border: double;
    }

    th {
        width: 100px;
    }

    td {
        border: double;
        width: 100px;
    }

    input {
        width: 100px;
    }
</style>
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/knockout-3.3.0.js"></script>
 

<input type="button" value="Add New Record" data-bind="click: function () { EmpViewModel.addnewRecord(); }" />
<table>
    <thead>
        <tr>
            <th>
                EmpNo
            </th>
            <th>
                EmpName
            </th>
            <th>
                DeptName
            </th>
            <th>
                Desigation
            </th>
            <th>
                Salary
            </th>
            <th>
            </th>
            <th>
            </th>
        </tr>
    </thead>
    <tbody data-bind="template: { name: currentTemplate, foreach: Employees }"></tbody>
</table>


<script type="text/html" id="readonlyTemplate">
    @*  <table>*@
    <tr>
        <td>
            <span data-bind="text: EmpNo"></span>
        </td>
        <td>
            <span data-bind="text: EmpName"></span>
        </td>
        <td>
            <span data-bind="text: DeptName"></span>
        </td>
        <td>
            <span data-bind="text: Designation"></span>
        </td>
        <td>
            <span data-bind="text: Salary"></span>
        </td>
        <td>
            <input type="button" value="Edit" data-bind="click: function () { EmpViewModel.editTemplate($data);}" />
        </td>
        <td>
            <input type="button" value="delete" data-bind="click: function () { EmpViewModel.deleteEmployee($data); }" />
        </td>
    </tr>
    @* </table>*@
</script>

<script type="text/html" id="editTemplate">
    @* <table>*@
    <tr>
        <td>
            <input type="text" data-bind="value: $data.EmpNo" id="txteno" disabled="disabled" />
        </td>
        <td>
            <input type="text" data-bind="value: $data.EmpName" id="txtename" />
        </td>
        <td>
            <input type="text" data-bind="value: $data.DeptName" id="txtdname" />
        </td>
        <td>
            <input type="text" data-bind="value: $data.Designation" id="txtdesig" />
        </td>
        <td>
            <input type="text" data-bind="value: $data.Salary" id="txtsal" />
        </td>
        <td>
            <input type="button" value="Save" data-bind="click: EmpViewModel.saveEmployee" />
        </td>
        <td>
            <input type="button" value="Cancel" data-bind="click: function () { EmpViewModel.reset(); }" />
        </td>
    </tr>
    @*       </table>*@
</script>
