#catalog new update
db  S(csv), P(csv), SP(csv)
G:=S[{S#}] [{* supplied:= {{*}} compose (SP join P)}]
S join G)
S [{* supplied:={{*}} join (SP join P)}]
S [?(CITY sub {{CITY:='London'},{CITY:='Paris'}})]
#stop
// types
3 xor 10
true xor false
d1 := dateymd(2015,1,31)
d1.year
"Date: " & d1 & " Year:" & d1.year & " month:" & d1.month & " day:" & d1.day & " dow:" & d1.dow
rr:={{a:text,b:text}}
def utx(b:bool, s:text, n:number, t:time, r:rr)
//def utx(b:bool, s:text, n:number, t:time, r:{{a:text,b:text}})
utv:=utx(true,'hello world', 42, now(), {{a:='aaaa',b:='bbbb'},{a:='aaaaa',b:='bbbbb'}})
utv
def stx:time
stv := stx(t'31/12/2015')
stv
stv.super

def stxx:stx
stvv := stxx(stx(t'31/12/2015'))
stvv
stvv.super
stvv.super.super

d1 := dateymd(2015,1,31)
"Date: " & d1 & " Year:" & d1.year & " month:" & d1.month & " day:" & d1.day & " dow:" & d1.dow
date(t'1/1/2015')
time(date(time(d1)))

andl_catalog
#stop

f1(a:'') => do {
  t := a
  t
}
f2(a:0) => do {
  t := a
  t
}
f3(a:S) => do {
  t := a
  t
}

rr1 := {{ id:number, name:text }}
rr2 := {{ name:='abc', id:=17 }}
def rt1(id:number, name:text)
def rt2(name:text, id:number) // last line
