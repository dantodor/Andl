// mandelbrot.andl -- display the Mandelbrot set
// 
// based on https://www.sqlite.org/lang_with.html

xaxis := {{ x:=-2.0 }} .while( {{ x:=x+0.05 }} .where(x<1.2) )
yaxis := {{ y:=-1.0 }} .while( {{ y:=y+0.1 }} .where(y<1.1) )
m := ({{ iter:=0, x:=0, y:=0 }} join xaxis .select{ cx:=x } join yaxis .select{ cy:=y }) 
    .while( {{ iter:=iter+1, x := x*x-y*y+cx, y:=2*x*y+cy, cx, cy }} .where(x*x+y*y<4.0 and iter<28) )
m.count
m2 := m .select{ iter := fold(max,iter), cx, cy } .order(cy,cx)
m2.count
a := m2 .select{ cy, t := fold(&, right(left(' .+*#', 1 + iter div 6), 1)) }
a
//write(a .select{ fold(&,t & h'd a') })

//WITH RECURSIVE
//  xaxis(x) AS (VALUES(-2.0) UNION ALL SELECT x+0.05 FROM xaxis WHERE x<1.2),
//  yaxis(y) AS (VALUES(-1.0) UNION ALL SELECT y+0.1 FROM yaxis WHERE y<1.0),
//  m(iter, cx, cy, x, y) AS (
//    SELECT 0, x, y, 0.0, 0.0 FROM xaxis, yaxis
//    UNION ALL
//    SELECT iter+1, cx, cy, x*x-y*y + cx, 2.0*x*y + cy FROM m 
//     WHERE (x*x + y*y) < 4.0 AND iter<28
//  ),
//  m2(iter, cx, cy) AS (
//    SELECT max(iter), cx, cy FROM m GROUP BY cx, cy
//  ),
//  a(t) AS (
//    SELECT group_concat( substr(' .+*#', 1+min(iter/7,4), 1), '') 
//    FROM m2 GROUP BY cy
//  )
//SELECT group_concat(rtrim(t),x'0a') FROM a;

