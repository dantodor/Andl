// sudoku-orig.andl -- direct translation of algorithm in Sqlite https://www.sqlite.org/lang_with.html

// brute force solver
// too slow -- breadth first

inp := {{ sud := '53..7....6..195....98....6.8...6...34..8.3..17...2...6.6....28....419..5....8..79' }}
digits := {{ z:= '1', lp := 1}} recurse( {{ z:=text(lp+1), lp:=lp+1 }} [?(lp <= 9)] )
x := inp [
    { s := sud, ind := before(sud, '.').length }
    ] recurse(
    digits [{ s := left(s,ind) & z & right(s, 80-ind), ind, z, lp }] [
        ?( ind < 7
            and not (z = right(left(s, (ind - 1) div 9 * 9 + lp), 1)
            or z = right(left(s, (ind - 1) mod 9 + (lp - 1) * 9 + 1), 1)
            or z = right(left(s, (ind - 1) div 3 mod 3 * 3 
                 + (ind - 1) div 27 * 27 
                 + lp + (lp - 1) div 3 * 6), 1)
            ))
        { s, ind := before(s, '.').length }
    ]
)
x
x.count
