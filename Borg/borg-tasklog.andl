// Borg model - tasklog

tasklog := {{ 
    id:0, logtime:time, description, task :0
}}

// Find next id
getid_tasklog() => do {
    tasklog [ { fold(max,id) } ] +1
}

// tasklog CRUD

// Add a set of tasklogs
add_tasklog(tl:tasklog) => do {
    if(tl.count <> 1, fail("add_tasklog", "must be single record"), do{})
    a := tl [ { *
        id := getid_tasklog(),
    }]
    tasklog := union a
    a
}

// Add a tasklog with desc and task
add_tasklog_task_desc(tid:0, desc) => do {
    tasklog := union {{
        id := getid_tasklog(),
        logtime := now(),
        description := desc,
        task := tid,
    }}
}

// Replace a set of tasklogs
put_tasklog_id(tid:0, tl:tasklog) => do {
    tasklog := [ ?(id = tid) ]
    tasklog := union tl
}

// Delete tasklog by id
delete_tasklog_id(tid:0) => do {
    tasklog := [ ?(id = tid) ]
}

// Find tasklog by id
get_tasklog_id(tid:0) => do {
    tasklog[ ?(id = tid) ]
}

// Find all tasklogs
get_tasklog() => do {
    tasklog
}

// Find tasklogs for a task
get_tasklog_task(taskid:0) => do {
    tasklog [ ?(task = taskid) ]
}

