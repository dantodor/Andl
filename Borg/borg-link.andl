// Borg model - link

link := {{ id:0, linktype, ownerkey:0, ownertype, path }}

// Find next key
next_links_key() => do {
    link [ { fold(max,id) }] +1
}

// link CRUD

// Add a set of links
add_link(cl:link) => do {
    link := union cl [ { *
        id := next_links_key() 
    } ]
}

// Replace a set of links
update_link(cl:link) => do {
    link := minus (link join cl [{ id }])
    link := union cl
}

// Delete link by key
delete_link(key) => do {
    link := [ ?(id = key) ]
}

// Find link by key
find_link(key) => do {
    link[ ?(id = key) ]
}

// Find all links
all_links() => do {
    link
}

// Find all links for an owner
by_links_owner(key, type) => do {
    link [ ?(id = key and linktype = type)]
}

