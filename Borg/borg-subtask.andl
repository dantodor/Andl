// Borg model - subtask

subtask := {{ 
    id:0, create_date:time, due_date:time, close_date:time, description, task:0, create_time:time, lastmod:time, uid, url
}}

// Find next id
getnext_subtask() => do {
    subtask [ { fold(max,id) } ] +1
}

// subtask REST CRUD

// Add a set of subtasks
add_subtask(st:subtask) => do {
    if(st.count <> 1, fail("add_subtask", "must be single record"), do{})
    a := st [ { *
        id := getnext_subtask(),
        create_time := now(), 
        lastmod := now() 
    }]
    subtask := union a
    a
}

// Replace a set of subtasks
put_subtask_id(sid:0, st:subtask) => do {
    if(st.count <> 1, fail("add_subtask", "must be single record"), do{})
    subtask := [ ?(id = sid) ]
    subtask := union st [ { *
        id := sid,
        lastmod := now() 
    } ]
}

// Delete subtask by id
delete_subtask_id(sid:0) => do {
    subtask := [ ?(id = sid) ]
}

// Find subtask by id
get_subtask_id(sid:0) => do {
    subtask[ ?(id = sid) ]
}

// Find all subtasks
get_subtask() => do {
    subtask
}

//--- Subtask other queries

// Find subtasks for a task
get_subtask_by_task(tid:0) => do {
    subtask [ ?(task = tid) ]
}

