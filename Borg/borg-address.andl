// Borg model - Address

address := {{
    address_num:0, first_name, last_name, nickname, email, screen_name, work_phone, 
    home_phone, fax, pager, street, city, state, zip, country, company, work_street, 
    work_city, work_state, work_zip, work_country, webpage, notes, birthday:time, cell_phone
}}

//--- Address special

// Get the next key
getnext_address() => do {
    address[ { fold(max,address_num) }] +1
}

//--- Address REST

// Add a set of addresses
add_address(addr:address) => do {
    if(addr.count <> 1, fail("add_address", "must be single record"), do{})
    a := addr [ { * address_num := getnext_address() } ]
    address := union a
    a
}

// Replace an address
put_address_id(aid:0, addr:address) => do {
    if(addr.count <> 1, fail("put_address", "must be single record"), do{})
    address := [ ?(address_num = aid) ]
    address := union addr [ { * address_num := aid } ]
}

// Delete address by id
delete_address_id(aid:0) => do {
    address := [ ?(address_num = aid) ]
}

// Find address by id
get_address_id(aid:0) => do {
    address[ ?(address_num = aid) ]
}

// Find all addresses
get_address() => do {
    address
}

//--- Address other queries

get_address_ids() => do {
    address[ $(last_name, first_name) { num := address_num } ]
}

